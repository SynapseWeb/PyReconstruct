* Lab meeting 20220901
** Intro
*** Summer "mini" project

- New understanding of Reconstruct machinations
- "Reconstruct-parallel" tools
- ? Integrate tools into "Reconstruct"
- But in Python
- Minimize hubris
- Most basic Reconstruct function?

*** Original primary goal

Draw lines on images using *Python*???

*** Updated goals post-wow factor

Let's keep the good times going!
  
- Keep spirit of "legacy" Reconstruct
- Simple and ports to/from legacy Reconstruct
- Capitalize on previous work (Larry and Michael)
- Incorporate with autosegmentation efforts (Vijay)
  
*** How?

- Prioritized major Reconstruct functions 
- Moved down list sequentially
- How far can we get?
  
*** This presentation

- Full demo of *pyReconstruct*
- 100% Python (3 months)
- v0.0.-2
- Super basic / unpolished GUI
- Reconstuct tool emulation
- Questions at end
  
** Demo (Michael shuts up)

- Open py-reconstruct and start new series
  
- Demo tools
  
   + Trace object
   + Stamp
   + Scalpel
   + Undo / redo
   + Merge
   + Pan / Zoom
   + Obj list / autorefreshing
   + Importing "SWiFT" transformations
   + Exporting back to legacy Reconstruct
   + Importing a series from legacy Reconstruct
   + Imports zarr files
     
- Explanation (think about differences with legacy Reconstruct)
  
   + PyQT, numpy, openCV
   + JSON structure (XML contrasted with the same JSON)
   + Transformations
   + Point storage (consider simplifying trace points on series import)
   + Merge differences
   + Things are good about Reconstruct
     
** Future / Summary
*** pyReconstruct advantages

- Not fixed (adaptable) - Reconstruct wish-list (e.g., scalpel, auto-refreshing object list, redo)
- Extensible / customizable / new tools on the fly (e.g., variable-radius circles)
- Integration with team Vijay
- Cross-platform (e.g., run in Linux, TACC)
     
*** Future
  
- 3D in Blender
- API (application programming interface)
- VC with git / automatic backing up

*** Personal growth

- Team work
- VC, git, gitHub, gitHub Desktop
- Managing dependencies
- Linux
- Programming skills

*** Q and A

- Soft balls to Michael
- Hard questions to Julian
** Notes
- Redo / undo per section
- Consider history / state tab
- Consider logging in as UTeID
- Dependency-free environment?
- Keep pyReconstruct slim!
